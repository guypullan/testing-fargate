{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "template to create fargate service",
  "Parameters": {
    "Cluster": {
      "Type": "String",
      "Description": "",
      "Default": "default"
    },
    "ServiceName": {
      "Type": "String",
      "Description": "",
      "Default": "test-cloudformation-service"
    },
    "Environment": {
      "Type": "String",
      "Description": "",
      "Default": "test"
    },
    "LaunchType": {
      "Type": "String",
      "Description": "",
      "Default": "FARGATE"
    },
    "DesiredCount": {
      "Type": "String",
      "Description": "",
      "Default": "1"
    },
    "DeploymentMaximumPercent": {
      "Type": "String",
      "Description": "",
      "Default": "200"
    },
    "DeploymentMinimumHealthyPercent": {
      "Type": "String",
      "Description": "",
      "Default": "50"
    },
    "ContainerPort": {
      "Type": "String",
      "Description": "",
      "Default": "80"
    },
    "ECSHostSecurityGroup": {
      "Type": "String",
      "Description": "",
      "Default": "sg-61e1a815"
    },
    "PrivateSubnet1": {
      "Type": "String",
      "Description": "",
      "Default": "subnet-0e198053"
    },
    "PrivateSubnet2": {
      "Type": "String",
      "Description": "",
      "Default": "subnet-d13e61b5"
    },
    "VCpu": {
      "Type": "String",
      "Description": "",
      "Default": "256"
    },
    "awsaccountid": {
      "Type": "String",
      "Description": "",
      "Default": "329802642264"
    },
    "Memory": {
      "Type": "String",
      "Description": "",
      "Default": "512"
    },
    "DockerImage": {
      "Type": "String",
      "Description": "",
      "Default": "httpd:2.4"
    },
    "ContainerPort": {
      "Type": "String",
      "Description": "",
      "Default": "80"
    }
  },
  "Resources": {
    "ECSCluster":{
      "Type":"AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": { "Ref": "Cluster" }
      }
    },
    "Service": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": { "Ref": "ECSCluster" },
        "ServiceName": { "Ref": "ServiceName" },
        "LaunchType": { "Ref": "LaunchType" },
        "DesiredCount": { "Ref": "DesiredCount" },
        "DeploymentConfiguration": {
          "MaximumPercent": { "Ref": "DeploymentMaximumPercent" },
          "MinimumHealthyPercent": { "Ref": "DeploymentMinimumHealthyPercent" }
        },
        "TaskDefinition": { "Ref": "TaskDefinitionConfig" },
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              { "Ref": "ECSHostSecurityGroup" }
            ],
            "Subnets": [
              { "Ref": "PrivateSubnet1" },
              { "Ref": "PrivateSubnet2" }
            ]
          }
        },
        "LoadBalancers": [
          {
            "ContainerName":
            { "Fn::Join": [ "-", [ { "Ref": "ServiceName" },"container" ]]},
            "ContainerPort": { "Ref": "ContainerPort" },
            "TargetGroupArn": { "Ref": "TargetGroupConfig" }
          }
        ]
      }
    },
    "FargateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "/",
            [
              "/ecs",
              { "Fn::Join": [ "-", [ { "Ref": "ServiceName" }, "container" ]]}
            ]
          ]
        },
        "RetentionInDays": 14
      }
    },
    "TaskDefinitionConfig": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Cpu": { "Ref": "VCpu" },
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "Family": { "Ref": "ServiceName" },
        "NetworkMode": "awsvpc",
        "ExecutionRoleArn":
        { "Fn::Join": [ ":", [ "arn:aws:iam:", { "Ref": "awsaccountid" }, "role/ecsTaskExecutionRole" ]]},
        "TaskRoleArn":
        { "Fn::Join": [ ":", [ "arn:aws:iam:", { "Ref": "awsaccountid" }, "role/ecsTaskExecutionRole" ]]},
        "Memory": { "Ref": "Memory" },
        "ContainerDefinitions": [
          {
            "Name":
            { "Fn::Join": [ "-", [ { "Ref": "ServiceName" }, "container" ]]},
            "Essential": true,
            "Image": { "Ref": "DockerImage" },
            "PortMappings": [
              {
                "ContainerPort": { "Ref": "ContainerPort" }
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": { "Fn::Join": [ "/", [ "/ecs", { "Fn::Join": [ "-", [ { "Ref": "ServiceName" }, "container" ]]}]]},
                "awslogs-region": { "Ref":"AWS::Region" },
                "awslogs-stream-prefix": "ecs"
              }
            },
            "EntryPoint": [
              "sh",
              "-c"
            ],
            "Command": [
              "/bin/sh -c \"echo '<html> <head> <title>Amazon ECS Sample App</title> <style>body {margin-top: 40px; background-color: #333;} </style> </head><body> <div style=color:white;text-align:center> <h1>Amazon ECS Sample App</h1> <h2>Congratulations!</h2> <p>Your application is now running on a container in Amazon ECS.</p> </div></body></html>' >  /usr/local/apache2/htdocs/index.html && httpd-foreground\""
            ]
          }
        ]
      }
    },
    "TargetGroupConfig": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "VpcId": { "Ref": "VpcId" },
        "Port": { "Ref": "ELBPort" },
        "Protocol": { "Ref": "ELBProtocol" },
        "Matcher": {
          "HttpCode": { "Ref": "HealthCheckResponseCodes" }
        },
        "HealthCheckIntervalSeconds": { "Ref": "HealthCheckIntervalSeconds" },
        "HealthCheckPath": { "Ref": "HealthCheckPath" },
        "HealthCheckProtocol": { "Ref": "ELBProtocol"  },
        "HealthCheckTimeoutSeconds": { "Ref": "HealthCheckTimeoutSeconds"  },
        "HealthyThresholdCount": { "Ref": "HealthyThresholdCount" },
        "UnhealthyThresholdCount": { "Ref": "UnhealthyThresholdCount" },
        "Name":
        { "Fn::Join": [ "-", [ { "Ref": "ServiceName" },"TG" ]]},
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "60"
          }
        ],
        "TargetType": "ip"
      }
    },
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "ElasticLoadBalancer",
        "SecurityGroups": [
          "AlbSecurityGroup"
        ],
        "Subnets": {
          "Fn::Split": [
            ",",
            {
              "Fn::ImportValue": "core-infra-adapter-PublicSubnets"
            }
          ]
        },
        "Scheme": "internet-facing"
      }
    },
    "LoadBalancerListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": "ElasticLoadBalancer",
        "Port": "ElbPort",
        "Protocol": "HTTP",
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": "DefaultTargetGroup"
          }
        ]
      }
    },
    "AlbSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ELB Allowed Ports",
        "VpcId": "Vpc",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "ElbPort",
            "ToPort": "ElbPort",
            "CidrIp": "SourceCidr"
          }
        ]
      }
    },
    "Outputs":{
      "ecscluster":{
        "Value":{
          "Ref":"ECSCluster"
        }
      }
    }
  }
}
